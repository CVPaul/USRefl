// This file is generated by Ubpa::USRefl::AutoRefl

#pragma once

#include <USRefl/USRefl.h>

template<typename T>
struct Ubpa::USRefl::TypeInfo<Ubpa::Nested::Vec<T>>
    : Ubpa::USRefl::TypeInfoBase<Ubpa::Nested::Vec<T>>
{
    static constexpr AttrList attrs = {
        Attr{"size", sizeof(T)},
    };

    static constexpr FieldList fields = {
        Field{"x", &Ubpa::Nested::Vec<T>::x,
            AttrList{
                Attr{"not_serialize"},
            }
        },
        Field{"y", &Ubpa::Nested::Vec<T>::y,
            AttrList{
                Attr{"info", "hello"},
                Attr{"maximum", 10.f},
            }
        },
        Field{"num", &Ubpa::Nested::Vec<T>::num},
        Field{"__constructor", WrapConstructor<Ubpa::Nested::Vec<T>()>()},
        Field{"__constructor", WrapConstructor<Ubpa::Nested::Vec<T>(T, T)>(),
            AttrList {
                Attr{"__arg_0",
                    AttrList{
                        Attr{"__name", "x"},
                    }
                },
                Attr{"__arg_1",
                    AttrList{
                        Attr{"__name", "y"},
                    }
                },
            }
        },
        Field{"__destructor", WrapDestructor<Ubpa::Nested::Vec<T>>()},
        Field{"Sum", static_cast<float(Ubpa::Nested::Vec<T>::*)()const>(&Ubpa::Nested::Vec<T>::Sum)},
        Field{"Sum", static_cast<float(Ubpa::Nested::Vec<T>::*)(float)const>(&Ubpa::Nested::Vec<T>::Sum),
            AttrList {
                Attr{"__arg_0",
                    AttrList{
                        Attr{"__name", "z"},
                        Attr{"__default_value", 1.f},
                    }
                },
            }
        },
        Field{"Dot", &Ubpa::Nested::Vec<T>::Dot,
            AttrList {
                Attr{"__arg_0",
                    AttrList{
                        Attr{"__name", "lhs"},
                    }
                },
                Attr{"__arg_1",
                    AttrList{
                        Attr{"__name", "rhs"},
                    }
                },
            }
        },
    };
};

